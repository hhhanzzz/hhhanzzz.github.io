import{_ as s,o as a,c as l,S as o}from"./chunks/framework.3ac0968e.js";const A=JSON.parse('{"title":"Dom 学习总结","description":"","frontmatter":{"title":"Dom 学习总结","date":"2023-08-20","sidebar":"auto","categories":["前端"]},"headers":[],"relativePath":"fe/js/dom.md","filePath":"fe/js/dom.md","lastUpdated":null}'),n={name:"fe/js/dom.md"},e=o(`<h1 id="dom-学习总结" tabindex="-1">Dom 学习总结 <a class="header-anchor" href="#dom-学习总结" aria-label="Permalink to &quot;Dom 学习总结&quot;">​</a></h1><h2 id="获取-dom-元素" tabindex="-1">获取 DOM 元素 <a class="header-anchor" href="#获取-dom-元素" aria-label="Permalink to &quot;获取 DOM 元素&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">css选择器</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">css选择器</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 根据id获取一个元素</span></span>
<span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">nav</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 根据标签获取一类元素 获取页面所有div</span></span>
<span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementByTagName</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 根据类名获取元素 获取页面所有类名为w的</span></span>
<span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementsByClassName</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">w</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="修改-dom-元素内容" tabindex="-1">修改 DOM 元素内容 <a class="header-anchor" href="#修改-dom-元素内容" aria-label="Permalink to &quot;修改 DOM 元素内容&quot;">​</a></h2><p>可通过 dom 对象的<code>innerTest</code>属性以及<code>innerHTML</code>属性来修改 dom 对象的内容</p><ul><li><code>innerTest</code> 仅包含 dom 对象的文本内容</li><li><code>innerHTML</code> 包含子元素以及文本等内容</li></ul><h2 id="修改元素属性" tabindex="-1">修改元素属性 <a class="header-anchor" href="#修改元素属性" aria-label="Permalink to &quot;修改元素属性&quot;">​</a></h2><ul><li>还可以通过修改 dom 对象属性设置/修改标签元素属性,比如 <code>src</code>, <code>href</code>, <code>title</code></li><li>但是注意, 得标签有这些属性才可以修改</li></ul><h2 id="修改元素样式属性" tabindex="-1">修改元素样式属性 <a class="header-anchor" href="#修改元素样式属性" aria-label="Permalink to &quot;修改元素样式属性&quot;">​</a></h2><h3 id="style" tabindex="-1">style <a class="header-anchor" href="#style" aria-label="Permalink to &quot;style&quot;">​</a></h3><p>可以通过 dom 对象的<code>style</code>属性来修改标签的样式</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">paddingLeft </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">300px</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 小驼峰命名 别忘了单位</span></span></code></pre></div><h3 id="class" tabindex="-1">class <a class="header-anchor" href="#class" aria-label="Permalink to &quot;class&quot;">​</a></h3><p>可以通过 dom 对象的<code>className</code> 和 <code>classList</code> 属性来修改标签的样式</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">className </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">nav test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 可同时加多个</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">classList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">active</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 添加active类</span></span>
<span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">classList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">active</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 移除active类</span></span>
<span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">classList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toggle</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">active</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 切换active类</span></span></code></pre></div><h2 id="修改表单标签值" tabindex="-1">修改表单标签值 <a class="header-anchor" href="#修改表单标签值" aria-label="Permalink to &quot;修改表单标签值&quot;">​</a></h2><p>可以通过表单 dom 对象的 <code>disabled</code>, <code>checked</code>, <code>selected</code> 等属性来修改标签的值</p><h2 id="自定义属性" tabindex="-1">自定义属性 <a class="header-anchor" href="#自定义属性" aria-label="Permalink to &quot;自定义属性&quot;">​</a></h2><ul><li>标准属性: dom 对象自带的属性</li><li>自定义属性: <ul><li>在 html5 中推出了专门的 data-自定义属性</li><li>在标签上一律以 data-开头</li><li>在 dom 对象上一律以 dataset 对象方式获取</li></ul></li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2233</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> div </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(div</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id) </span><span style="color:#676E95;font-style:italic;">// 2233</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="节点操作" tabindex="-1">节点操作 <a class="header-anchor" href="#节点操作" aria-label="Permalink to &quot;节点操作&quot;">​</a></h2><h3 id="节点查" tabindex="-1">节点查 <a class="header-anchor" href="#节点查" aria-label="Permalink to &quot;节点查&quot;">​</a></h3><ul><li>父级: <code>parentNode</code></li><li>子集: <code>children</code> 伪数组</li><li>兄弟: <ul><li><code>nextElementSibling</code></li><li><code>previousElementSibling</code></li></ul></li></ul><h3 id="节点增" tabindex="-1">节点增 <a class="header-anchor" href="#节点增" aria-label="Permalink to &quot;节点增&quot;">​</a></h3><ul><li>创建新节点 <code>document.createElement(标签名称)</code></li><li>追加节点 <ul><li><code>parent.appendChild(child)</code> 将一个节点附加到指定父节点的子节点列表的末尾处</li><li><code>parent.insertBefore(child, refChild)</code> 将<code>child</code>追加到<code>refChild</code>前面 如果<code>refChild</code>未传, 则加到父节点的子节点的末尾</li></ul></li><li>克隆节点 <code>cloneNode</code></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> div </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(div</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">appendChild</span><span style="color:#A6ACCD;">(div</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">children[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cloneNode</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)))</span></span></code></pre></div><h3 id="节点删" tabindex="-1">节点删 <a class="header-anchor" href="#节点删" aria-label="Permalink to &quot;节点删&quot;">​</a></h3><p><code>parent.removeChild(child)</code></p><h2 id="定时器" tabindex="-1">定时器 <a class="header-anchor" href="#定时器" aria-label="Permalink to &quot;定时器&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> intervalTimer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setInterval</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hhhan</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> timeoutTimer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hhhan</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">clearInterval</span><span style="color:#A6ACCD;">(intervalTimer)</span></span>
<span class="line"><span style="color:#82AAFF;">clearTimeout</span><span style="color:#A6ACCD;">(timeoutTimer)</span></span></code></pre></div><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><h3 id="事件监听" tabindex="-1">事件监听 <a class="header-anchor" href="#事件监听" aria-label="Permalink to &quot;事件监听&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">事件名</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hhhan</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>常用事件:</p><ul><li><code>click</code> 点击事件</li><li><code>mouseenter</code> 鼠标进入事件</li><li><code>mouseleave</code> 鼠标离开事件</li><li><code>keydown</code> 键盘按下事件</li><li><code>keyup</code> 键盘抬起事件</li><li><code>input</code> 用户输入事件等</li><li><code>load</code> 页面加载事件</li><li><code>scroll</code> 页面滚动事件</li><li><code>resize</code> 页面尺寸事件</li></ul><p>移动端事件:</p><ul><li><code>touchstart</code> 手指触摸到一个dom元素时触发</li><li><code>touchmove</code> 手指在一个dom元素上滑动时触发</li><li><code>touchend</code> 手指从一个dom元素上移开时触发</li></ul><p>更多请参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/Events" target="_blank" rel="noreferrer">MDN 事件参考</a></p><div class="tip custom-block"><p class="custom-block-title">事件对象</p><ul><li>事件对象 e</li><li>e.stopPropagation() 阻止冒泡</li><li>e.preventDefault() 阻止元素默认行为</li></ul></div><h3 id="环境对象-this" tabindex="-1">环境对象 this <a class="header-anchor" href="#环境对象-this" aria-label="Permalink to &quot;环境对象 this&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="事件捕获和冒泡" tabindex="-1">事件捕获和冒泡 <a class="header-anchor" href="#事件捕获和冒泡" aria-label="Permalink to &quot;事件捕获和冒泡&quot;">​</a></h3><p>可通过 <code>e.stopPropagation()</code> 来阻止冒泡</p><h3 id="事件委托" tabindex="-1">事件委托 <a class="header-anchor" href="#事件委托" aria-label="Permalink to &quot;事件委托&quot;">​</a></h3><p>说白了就是事件冒泡, 给父元素注册事件,当我们触发子元素的事件时候,会冒泡到父元素身上, 从而触发父元素事件</p><h3 id="事件解绑" tabindex="-1">事件解绑 <a class="header-anchor" href="#事件解绑" aria-label="Permalink to &quot;事件解绑&quot;">​</a></h3><h4 id="使用-on-注册的事件" tabindex="-1">使用 on 注册的事件 <a class="header-anchor" href="#使用-on-注册的事件" aria-label="Permalink to &quot;使用 on 注册的事件&quot;">​</a></h4><ul><li>同一个对象, 后面注册的事件会覆盖前面注册的(同一个事件)</li><li>直接使用 null 覆盖就可以</li></ul><h4 id="使用-addeventlistener" tabindex="-1">使用 addEventListener <a class="header-anchor" href="#使用-addeventlistener" aria-label="Permalink to &quot;使用 addEventListener&quot;">​</a></h4><ul><li>后面注册的事件不会覆盖前面注册的事件(同一个事件)</li><li>必须使用 removeEventListener(事件类型, 事件处理函数, 获取捕获或者冒泡阶段)</li><li>匿名函数无法被解绑</li></ul><h3 id="offset-家族" tabindex="-1">offset 家族 <a class="header-anchor" href="#offset-家族" aria-label="Permalink to &quot;offset 家族&quot;">​</a></h3><ul><li><code>offsetWidth</code> 元素内容+padding+border 的宽</li><li><code>offsetHeight</code> 元素内容+padding+border 的高</li><li><code>offsetTop</code> 得到位置以带有定位父级为准,没有以文档左上角为准</li><li><code>offsetLeft</code> 同 <code>offsetTop</code></li></ul><h2 id="日期对象-date" tabindex="-1">日期对象 Date <a class="header-anchor" href="#日期对象-date" aria-label="Permalink to &quot;日期对象 Date&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toLocaleString</span><span style="color:#A6ACCD;">()) </span><span style="color:#676E95;font-style:italic;">// 2023/8/24 23:18:36</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toLocaleDateString</span><span style="color:#A6ACCD;">()) </span><span style="color:#676E95;font-style:italic;">// 2023/8/24</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toLocaleTimeString</span><span style="color:#A6ACCD;">()) </span><span style="color:#676E95;font-style:italic;">// 23:18:36</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toDateString</span><span style="color:#A6ACCD;">()) </span><span style="color:#676E95;font-style:italic;">// Thu Aug 24 2023</span></span></code></pre></div><h3 id="时间戳" tabindex="-1">时间戳 <a class="header-anchor" href="#时间戳" aria-label="Permalink to &quot;时间戳&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">date) </span><span style="color:#676E95;font-style:italic;">// 1692890521869</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(Date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">()) </span><span style="color:#676E95;font-style:italic;">// 1692890521869</span></span></code></pre></div><h2 id="bom" tabindex="-1">BOM <a class="header-anchor" href="#bom" aria-label="Permalink to &quot;BOM&quot;">​</a></h2><ul><li><code>location.href</code> 获取完整的url地址,对其赋值时用于地址的跳转</li><li><code>navigator.userAgent</code> 获取UA</li><li><code>history</code><ul><li><code>back()</code> 浏览器后退</li><li><code>forward()</code> 浏览器前进</li><li><code>go(参数)</code> 参数为正前进, 反之后退</li></ul></li><li><code>localStorage</code><ul><li><code>setItem()</code></li><li><code>getItem()</code></li><li><code>removeItem()</code></li></ul></li><li><code>sessionStorage</code> -同<code> localStorage</code></li></ul><h2 id="正则表达式" tabindex="-1">正则表达式 <a class="header-anchor" href="#正则表达式" aria-label="Permalink to &quot;正则表达式&quot;">​</a></h2>`,59),p=[e];function t(c,r,i,y,D,d){return a(),l("div",null,p)}const C=s(n,[["render",t]]);export{A as __pageData,C as default};
