import{_ as p,E as r,o as c,c as i,k as s,t as e,a,J as o,S as t}from"./chunks/framework.3ac0968e.js";const N=JSON.parse('{"title":"vue基础","description":"","frontmatter":{"title":"vue基础","date":"2023-04-08","sidebar":"auto","categories":["前端"]},"headers":[],"relativePath":"fe/vue/vue2/vue基础.md","filePath":"fe/vue/vue2/vue基础.md","lastUpdated":1692159092000}'),y={name:"fe/vue/vue2/vue基础.md"},u=s("h2",{id:"一、搭建vue开发环境",tabindex:"-1"},[a("一、搭建vue开发环境 "),s("a",{class:"header-anchor",href:"#一、搭建vue开发环境","aria-label":'Permalink to "一、搭建vue开发环境"'},"​")],-1),F=s("ul",null,[s("li",null,"script标签引入"),s("li",null,"下载开发者工具"),s("li",null,"关闭生产提示")],-1),D=s("h2",{id:"二、初识vue",tabindex:"-1"},[a("二、初识vue "),s("a",{class:"header-anchor",href:"#二、初识vue","aria-label":'Permalink to "二、初识vue"'},"​")],-1),h=s("h2",{id:"三、模板语法",tabindex:"-1"},[a("三、模板语法 "),s("a",{class:"header-anchor",href:"#三、模板语法","aria-label":'Permalink to "三、模板语法"'},"​")],-1),d=s("h3",{id:"_1、插值语法",tabindex:"-1"},[a("1、插值语法 "),s("a",{class:"header-anchor",href:"#_1、插值语法","aria-label":'Permalink to "1、插值语法"'},"​")],-1),v=t("",46),C=s("h2",{id:"十八、内置指令",tabindex:"-1"},[a("十八、内置指令 "),s("a",{class:"header-anchor",href:"#十八、内置指令","aria-label":'Permalink to "十八、内置指令"'},"​")],-1),m=t("",7),A=s("br",null,null,-1),b=s("br",null,null,-1),f=s("br",null,null,-1),x=s("br",null,null,-1),V=s("br",null,null,-1),_=s("br",null,null,-1),q=s("strong",null,"proto",-1),k=s("h2",{id:"二十二、单文件组件简单练习",tabindex:"-1"},[a("二十二、单文件组件简单练习 "),s("a",{class:"header-anchor",href:"#二十二、单文件组件简单练习","aria-label":'Permalink to "二十二、单文件组件简单练习"'},"​")],-1);function g(l,w,P,M,E,O){const n=r("school");return c(),i("div",null,[u,F,D,s("p",null,"创建vue实例，模板，"+e(l.xxx)+"中xxx为js表达式",1),h,d,s("p",null,e(l.xxx),1),v,s("p",null,"filters 定义：对要显示的数据进行特定格式化后再显示（适用于一些简单逻辑的处理）。 语法： 1.注册过滤器：Vue.filter(name,callback) 或 new Vue{filters:{}} 2.使用过滤器："+e(l.xxx|l.过滤器名)+' 或 v-bind:属性 = "xxx | 过滤器名" 备注： 1.过滤器也可以接收额外参数、多个过滤器也可以串联 2.并没有改变原本的数据, 是产生新的对应的数据',1),C,s("p",null,"我们学过的指令： v-bind : 单向绑定解析表达式, 可简写为 :xxx v-model : 双向数据绑定 v-for : 遍历数组/对象/字符串 v-on : 绑定事件监听, 可简写为@ v-if : 条件渲染（动态控制节点是否存存在） v-else : 条件渲染（动态控制节点是否存存在） v-show : 条件渲染 (动态控制节点是否展示) v-text指令： 1.作用：向其所在的节点中渲染文本内容。 2.与插值语法的区别：v-text会替换掉节点中的内容，"+e(l.xx)+"则不会。v-text不会渲染标签 v-html指令： 1.作用：向指定节点中渲染包含html结构的内容。 2.与插值语法的区别： (1).v-html会替换掉节点中所有的内容，"+e(l.xx)+"则不会。 (2).v-html可以识别html结构。 3.严重注意：v-html有安全性问题！！！！ (1).在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击。 (2).一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！ v-cloak指令（没有值）： 1.本质是一个特殊属性，Vue实例创建完毕并接管容器后，会删掉v-cloak属性。 2.使用css配合v-cloak可以解决网速慢时页面展示出"+e(l.xxx)+"的问题。 v-cloak指令（没有值）： 1.本质是一个特殊属性，Vue实例创建完毕并接管容器后，会删掉v-cloak属性。 2.使用css配合v-cloak可以解决网速慢时页面展示出"+e(l.xxx)+"的问题。 v-once指令： 1.v-once所在节点在初次动态渲染后，就视为静态内容了。 2.以后数据的改变不会引起v-once所在结构的更新，可以用于优化性能。 v-pre指令： 1.跳过其所在节点的编译过程。 2.可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。",1),m,s("p",null,[a("Vue中使用组件的三大步骤： 一、定义组件(创建组件) 二、注册组件 三、使用组件(写组件标签) 一、如何定义一个组件？ 使用Vue.extend(options)创建，其中options和new Vue(options)时传入的那个options几乎一样，但也有点区别； 区别如下： 1.el不要写，为什么？ ——— 最终所有的组件都要经过一个vm的管理，由vm中的el决定服务哪个容器。 2.data必须写成函数，为什么？ ———— 避免组件被复用时，数据存在引用关系。 备注：使用template可以配置组件结构。 二、如何注册组件？ 1.局部注册：靠new Vue的时候传入components选项 2.全局注册：靠Vue.component('组件名',组件) 三、编写组件标签： "),o(n),a(" 几个注意点： 1.关于组件名: 一个单词组成： 第一种写法(首字母小写)：school 第二种写法(首字母大写)：School 多个单词组成： 第一种写法(kebab-case命名)：my-school 第二种写法(CamelCase命名)：MySchool (需要Vue脚手架支持) 备注： (1).组件名尽可能回避HTML中已有的元素名称，例如：h2、H2都不行。 (2).可以使用name配置项指定组件在开发者工具中呈现的名字。"),A,a(" 2.关于组件标签: 第一种写法："),o(n),a(" 第二种写法："),o(n),a(" 备注：不用使用脚手架时，"),o(n),a("会导致后续组件不能渲染。"),b,a(" 3.一个简写方式： const school = Vue.extend(options) 可简写为：const school = options 关于VueComponent： 1.school组件本质是一个名为VueComponent的构造函数，且不是程序员定义的，是Vue.exte的。"),f,a(" 2.我们只需要写"),o(n),a("或"),o(n),a("，Vue解析时会帮我们创建school组件的实例对象， 即Vue帮我们执行的：new VueComponent(options)。"),x,a(" 3.特别注意：每次调用Vue.extend，返回的都是一个全新的VueComponent！！！！"),V,a(" 4.关于this指向： (1).组件配置中： data函数、methods中的函数、watch中的函数、computed中的函数 它们的th【VueComponent实例对象】。 (2).new Vue(options)配置中： data函数、methods中的函数、watch中的函数、computed中的函数 它们的this均是【Vu象】。"),_,a(" 5.VueComponent的实例对象，以后简称vc（也可称之为：组件实例对象）。 Vue的实例对象，以后简称vm。 一个重要的内置关系： VueComponent.prototype."),q,a(" === Vue.prototype 为什么要有这个关系：让组件实例对象（vc）可以访问到 Vue原型上的属性、方法。")]),k])}const S=p(y,[["render",g]]);export{N as __pageData,S as default};
