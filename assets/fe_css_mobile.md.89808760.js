import{_ as s,o as l,c as a,S as n}from"./chunks/framework.3ac0968e.js";const F=JSON.parse('{"title":"移动端布局学习总结","description":"","frontmatter":{"title":"移动端布局学习总结","date":"2023-08-16","sidebar":"auto","categories":["前端"]},"headers":[],"relativePath":"fe/css/mobile.md","filePath":"fe/css/mobile.md","lastUpdated":1692876706000}'),e={name:"fe/css/mobile.md"},o=n(`<h1 id="移动端布局总结" tabindex="-1">移动端布局总结 <a class="header-anchor" href="#移动端布局总结" aria-label="Permalink to &quot;移动端布局总结&quot;">​</a></h1><h2 id="视口" tabindex="-1">视口 <a class="header-anchor" href="#视口" aria-label="Permalink to &quot;视口&quot;">​</a></h2><ul><li>布局视口</li><li>视觉视口</li><li>理想视口</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width,initial-scale=1.0, user-scalable=no, maximum-scale=1.0, minimux-scale=1.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span></code></pre></div><p>设置 meta 标签的目的：设置当前视口为理想视口，即设备有多宽，我们布局的视口就有多宽</p><ul><li>width: 设置的是视口宽度，设置为设备宽度即 device-width</li><li>initial-scale：初始缩放比</li><li>user-scalable：用户是否可以缩放</li><li>maximum-scale：最大缩放比</li><li>minimux-scale：最小缩放比</li></ul><div class="tip custom-block"><p class="custom-block-title">物理像素、物理像素比、二倍图</p><ul><li>1px 能显示的物理像素点的个数，称为物理像素比或屏幕像素比</li><li>假设物理像素比为 2，即 1px 能显示 2 个物理像素点，那么一个 50px<em>50px 的盒子则需要 100</em>100 个像素点才可以使图片不模糊故而就有了二倍图、三倍图等等</li><li><code>background-size</code>: 数字 / 百分比(相对父盒子来说的) / <code>cover</code> (等比例拉伸，完全覆盖盒子) / <code>contain</code> (等比例拉伸，有一边铺满盒子则不再拉伸)</li></ul></div><h2 id="常见移动端布局" tabindex="-1">常见移动端布局 <a class="header-anchor" href="#常见移动端布局" aria-label="Permalink to &quot;常见移动端布局&quot;">​</a></h2><ul><li>单独制作移动端页面</li><li>响应式页面</li><li>主流是单独制作移动端页面</li></ul><h3 id="移动端技术解决方案" tabindex="-1">移动端技术解决方案 <a class="header-anchor" href="#移动端技术解决方案" aria-label="Permalink to &quot;移动端技术解决方案&quot;">​</a></h3><ul><li>css 初始化 <a href="https://necolas.github.io/normalize.css/" target="_blank" rel="noreferrer">normalize.css</a></li><li>c3 盒子模型</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">box-sizing</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">border-box</span><span style="color:#A6ACCD;"> (c3盒子模型) / </span><span style="color:#FFCB6B;">content-box</span><span style="color:#A6ACCD;"> (传统盒子模型);</span></span></code></pre></div><h3 id="移动端特殊样式" tabindex="-1">移动端特殊样式 <a class="header-anchor" href="#移动端特殊样式" aria-label="Permalink to &quot;移动端特殊样式&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">-webkit-box-sizing: </span><span style="color:#FFCB6B;">border-box</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* c3盒子模型，上文说过，这里不多赘述 */</span></span>
<span class="line"><span style="color:#A6ACCD;">-webkit-tap-highlight-color: transparent; </span><span style="color:#676E95;font-style:italic;">/* 一般链接点击高亮我们需要去除，这里设置为透明 */</span></span>
<span class="line"><span style="color:#A6ACCD;">-webkit-appearance: none;  </span><span style="color:#676E95;font-style:italic;">/* 在移动端浏览器默认的外观在ios加上这个属性才能给按钮和输入框自定义样式 */</span></span>
<span class="line"><span style="color:#A6ACCD;">-webkit-touch-callout: none; </span><span style="color:#676E95;font-style:italic;">/* 禁用长按页面时的弹出菜单，一般给图片以及链接加这个样式 */</span></span></code></pre></div><h2 id="流式布局" tabindex="-1">流式布局 <a class="header-anchor" href="#流式布局" aria-label="Permalink to &quot;流式布局&quot;">​</a></h2><p>又被称为<strong>百分比布局</strong>、<strong>非固定像素布局</strong></p><ul><li><code>max-width:</code> 最大宽度</li><li><code>max-height</code> 最大高度</li><li><code>min-width:</code> 最小宽度</li><li><code>min-height</code> 最小高度</li></ul><h2 id="flex-布局" tabindex="-1">flex 布局 <a class="header-anchor" href="#flex-布局" aria-label="Permalink to &quot;flex 布局&quot;">​</a></h2><ul><li>传统布局：兼容性好、布局繁琐、局限性，不能再移动端很好的布局</li><li>flex 弹性布局：操作方便，布局简单，移动应用广泛、pc 端浏览器支持情况较差</li><li>故而 pc 端布局我们还是使用传统布局，移动端布局或者不考虑兼容性的 pc 端页面布局，我们还是使用 flex 弹性布局</li></ul><h3 id="给父元素加的" tabindex="-1">给父元素加的 <a class="header-anchor" href="#给父元素加的" aria-label="Permalink to &quot;给父元素加的&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">flex-direction</span><span style="color:#A6ACCD;">: row(默认值，从左到右)/row-reverse(从右到左)/column(从上到下)/column-reverse(从下到上)</span></span>
<span class="line"><span style="color:#FFCB6B;">justify-content</span><span style="color:#A6ACCD;">: flex-start(默认值，从头部开始，从左到右)/flex-end(靠右对齐)/center/ space-around(平分剩余空间)/space-between(先两边贴边，再评分剩余空间)</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-wrap</span><span style="color:#A6ACCD;">: nowrap(默认值，不换行)/wrap(换行)</span></span>
<span class="line"><span style="color:#FFCB6B;">align-items</span><span style="color:#A6ACCD;">： </span><span style="color:#FFCB6B;">flex-start</span><span style="color:#A6ACCD;">/</span><span style="color:#FFCB6B;">flex-end</span><span style="color:#A6ACCD;">/center(挤在一起居中)/stretch(延着侧轴拉伸，默认值，一般不给高度)</span></span>
<span class="line"><span style="color:#FFCB6B;">align-content</span><span style="color:#A6ACCD;">：</span><span style="color:#FFCB6B;">flex-start</span><span style="color:#A6ACCD;">/</span><span style="color:#FFCB6B;">flex-end</span><span style="color:#A6ACCD;">/center/stretch(设置子项元素高度平分父元素高度)/</span><span style="color:#FFCB6B;">space-around</span><span style="color:#A6ACCD;">/ </span><span style="color:#FFCB6B;">space-between</span></span>
<span class="line"><span style="color:#FFCB6B;">flex-flow</span><span style="color:#A6ACCD;">: column wrap;</span></span></code></pre></div><h3 id="给子元素加的" tabindex="-1">给子元素加的 <a class="header-anchor" href="#给子元素加的" aria-label="Permalink to &quot;给子元素加的&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">flex: 份数 </span><span style="color:#FFCB6B;">align-self</span><span style="color:#A6ACCD;">：auto(默认值，继承父元素的align-items属性) /</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">flex-start</span><span style="color:#A6ACCD;">/</span><span style="color:#FFCB6B;">flex-end</span><span style="color:#A6ACCD;">/center/stretch</span></span>
<span class="line"><span style="color:#A6ACCD;">  order：数值越小，排列越靠前，默认为0，和z-index不一样、;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">背景颜色线性渐变</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">background: linear-gradient(起始方向，颜色 1，颜色 2，...);</span></span>
<span class="line"><span style="color:#A6ACCD;">background: -webkit-linear-gradient(left top</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> blue);</span></span></code></pre></div></div><h2 id="grid-布局" tabindex="-1">grid 布局 <a class="header-anchor" href="#grid-布局" aria-label="Permalink to &quot;grid 布局&quot;">​</a></h2><ul><li><code>flex</code> 弹性布局是一维布局，<code>grid</code> 网格布局是二维布局</li><li>开启方式：元素添加 <code>display: grid</code></li><li>开启 <code>grid</code> 布局的元素，称为容器，其子元素变成容器成员，称为 <code>grid</code>项目</li><li><code>grid</code> 布局原理：通过设置容器和项目的属性，来控制子盒子的位置和排列方式</li></ul><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li><code>repeat()</code>: 重复声明。第一个参数为重复个数，第二个参数为宽度或高度。</li><li><code>auto-fill</code>: 尽可能填满每一行或每一列的个数。</li><li><code>fr</code>: 指明占容器剩余空间的份数，类似于 <code>flex</code> 布局的 <code>flex-grow</code> 属性。</li><li><code>minmax()</code>: 设置单元格最小和最大的宽度或高度。</li></ul></div><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">display: grid;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*  一共三列，列宽分别为 30px 40px 50px */</span></span>
<span class="line"><span style="color:#FFCB6B;">grid-template-columns</span><span style="color:#A6ACCD;">: 30px 40px 50px;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*  一共三行，行高分别为 30px 40px 50px  */</span></span>
<span class="line"><span style="color:#FFCB6B;">grid-template-rows</span><span style="color:#A6ACCD;">: 30px 40px 50px;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">grid-auto-columns</span><span style="color:#A6ACCD;">: 20px; </span><span style="color:#676E95;font-style:italic;">/* 设置除了 grid-template-columns 定义的列以外的列的宽度。*/</span></span>
<span class="line"><span style="color:#FFCB6B;">grid-auto-rows</span><span style="color:#A6ACCD;">: 20px; </span><span style="color:#676E95;font-style:italic;">/* 设置除了 grid-template-rows 定义的行以外的行的高度。*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">row-gap</span><span style="color:#A6ACCD;">: 10px;   </span><span style="color:#676E95;font-style:italic;">/* 行间距 10px */</span></span>
<span class="line"><span style="color:#FFCB6B;">column-gap</span><span style="color:#A6ACCD;">: 14px; </span><span style="color:#676E95;font-style:italic;">/* 列间距 20px */</span></span>
<span class="line"><span style="color:#A6ACCD;">gap: 10px 20px; </span><span style="color:#676E95;font-style:italic;">/* 行间距 10px，列间距 20px */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">justify-content</span><span style="color:#A6ACCD;">: center; </span><span style="color:#676E95;font-style:italic;">/* 同flex布局中的 justify-content */</span></span>
<span class="line"><span style="color:#FFCB6B;">align-content</span><span style="color:#A6ACCD;">: center; </span><span style="color:#676E95;font-style:italic;">/* 同flex布局中的 align-items */</span></span></code></pre></div><h2 id="rem-布局" tabindex="-1">rem 布局 <a class="header-anchor" href="#rem-布局" aria-label="Permalink to &quot;rem 布局&quot;">​</a></h2><ul><li>rem ：相对于 html 的字体大小，em 是父元素字体大小</li><li>媒体查询</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">750px</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>媒体查询+rem 实现元素动态变化</p><p>可使用媒体查询根据不同需求引入不同资源文件,例：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stylesheet</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">style320.css</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">media</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">screen and (min-width: 320px)</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stylesheet</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">style640.css</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">media</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">screen and (min-width: 640px)</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span></code></pre></div><h3 id="预处理器" tabindex="-1">预处理器 <a class="header-anchor" href="#预处理器" aria-label="Permalink to &quot;预处理器&quot;">​</a></h3><ul><li>css 的弊端：冗余度高、不利于维护以及复用、没有很好的计算能力</li><li>less , scss 等预处理器解决了这个问题</li></ul><h3 id="less-使用" tabindex="-1">less 使用 <a class="header-anchor" href="#less-使用" aria-label="Permalink to &quot;less 使用&quot;">​</a></h3><ul><li>变量命名：必须右@为前缀、不能包含特殊字符、不能以数字开头、大小写敏感 @color</li><li>嵌套</li><li>运算</li><li><code>@import</code> &#39;路径&#39;(导入导出)</li></ul><div class="tip custom-block"><p class="custom-block-title">rem 适配方案</p><ul><li><code>less</code> + 媒体查询 + <code>rem</code></li><li><code>flexible.js</code> + <code>rem</code></li></ul></div><h2 id="swiper-使用" tabindex="-1"><a href="https://www.swiper.com.cn/" target="_blank" rel="noreferrer">swiper</a> 使用 <a class="header-anchor" href="#swiper-使用" aria-label="Permalink to &quot;[swiper](https://www.swiper.com.cn/) 使用&quot;">​</a></h2><ul><li>下载需要的 css 和 js 文件</li><li>官网找到类似案例，复制 html 结构，css 样式，js 语法</li><li>根据需求定制修改模块</li></ul><h2 id="响应式布局" tabindex="-1">响应式布局 <a class="header-anchor" href="#响应式布局" aria-label="Permalink to &quot;响应式布局&quot;">​</a></h2><ul><li>超小屏幕(手机) &lt; 768px 设置宽度为 100%</li><li>小屏设备(平板) &gt;=768px 并 &lt; 992px 设置宽度为 750px</li><li>中等屏幕(桌面显示器) &gt;=992px &lt; 1200px 设置宽度为 970px</li><li>宽屏设备(大桌面显示器) &gt;=1200px 设置宽度为 1170px</li><li>布局容器</li><li>Bootstrap css 文件内置初始化样式 <ul><li>container 类 自动设置媒体查询</li><li>container-fluid 类： <ul><li>流式布局容器，百分百宽度、占据全部视口的容器、适合于单独做移动端开发</li></ul></li><li>栅格系统： .col-xs-, .col-sm-, .col-md-, .col.lg- <ul><li>列嵌套、列偏移 col-md-offset-、列排序 col-md-push,col-md-pull</li></ul></li><li>响应式工具：hidden-xs(在超小屏下隐藏), visible-xs 相反</li></ul></li></ul><h2 id="vw-布局" tabindex="-1">vw 布局 <a class="header-anchor" href="#vw-布局" aria-label="Permalink to &quot;vw 布局&quot;">​</a></h2><ul><li>vw,vh <ul><li>1vw 为当前视口宽度的百分之一，vh 同理</li></ul></li><li><a href="https://caniuse.com" target="_blank" rel="noreferrer">Can I Use</a> 查看兼容性问题</li></ul>`,46),p=[o];function t(c,i,r,d,y,u){return l(),a("div",null,p)}const C=s(e,[["render",t]]);export{F as __pageData,C as default};
